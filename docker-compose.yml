version: '3.8'

x-common-variables: &common-variables
  WOTD_VERSION: '2.0.1'

services:
  anki_connect:
    image: "thisisnttheway/headless-anki:main"
    container_name: wotd_anki-connect
    ports:
      - "5900:5900"
      - "8765:8765"
    volumes:
      - myapp:/data
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
          pids: 100

  db:
    image: postgres:alpine3.19
    container_name: wotd_db
    ports: 
      - 5432:5432
    volumes:
      - ./wotd-db/volume:/var/lib/postgresql/data
      - ./wotd-db/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./wotd-db/config/.env
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
          pids: 20

  backend:
    depends_on:
      - db
      - anki_connect
    image: "dermacon/wotd_backend:1.0"
    container_name: wotd_backend
    build: ./wotd-backend/
    env_file: .env
    environment:
      <<: *common-variables
      POSTGRES_HOST: 'db'
      POSTGRES_PORT: '5432'
      ANKI_CONNECT_HOST: 'anki_connect'
      ANKI_CONNECT_DATA_PORT: '8765'
      ANKI_CONNECT_LOGIN_PORT: '5900'
      DEBUG_DISABLE_CRON: False
    ports:
      - "5000:5000"
    networks:
      - app_network
    volumes:
      - ./logs/wotd_backend/:/app/tmp/logs/
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
          pids: 20

  frontend:
    depends_on:
        - backend
    container_name: wotd_frontend
    image: "dermacon/wotd_frontend"
    build:
      context: ./wotd-frontend/
      args:
        <<: *common-variables
        WOTD_BACKEND_PORT: '5000'
    ports:
      - "3000:80"
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
          pids: 20

networks:
  app_network:
    driver: bridge

volumes:
  myapp:

